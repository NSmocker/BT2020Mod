local WaterLogic = 
{
 
    
}


function WaterLogic:Start()
    print("Hello From Water Logic")  
--    local waterSphere = UE.GameObject.Find("WaterSphere")
--    if waterSphere ~= nil then
--        local waterRender = waterSphere:GetComponent("Renderer")
--    end
    
end


function WaterLogic:OnTriggerEnter(collider)
     
    print("Objects: "..collider.gameObject.name.."Entered")
    self.DebugText.text= self.DebugText.text..collider.gameObject.name .."\n"
    local rb = collider.gameObject:GetComponent("Rigidbody")
    if(rb ~= nil) then
        print("Object".. collider.gameObject.name.."has rigidbody")
        print("Object".. collider.gameObject.name.."has tag "..collider.gameObject.tag)
        if rb.isKinematic == true then print("Object".. collider.gameObject.name.."is kinematic") end
        if rb.isKinematic == false then print("Object".. collider.gameObject.name.."has no rigidbody") end
        rb.useGravity = false
        rb.drag = 1
    end
     

    if(collider.gameObject.name == "HeadSphere") then 
      if waterRender ~= nil then waterRender.enabled = true end
     self.WaterAudioSource:PlayOneShot(self.WaterAudioClip);
    end
     
end



function WaterLogic:OnTriggerExit(collider)
    local rb = collider.gameObject:GetComponent("Rigidbody")
    
    if rb ~= nil then
    rb.useGravity = true
    rb.drag = 0

    if rb.isKinematic == true then print("Object".. collider.gameObject.name.."is kinematic") end
    else print("Object".. collider.gameObject.name.."has no rigidbody") end

    end
    
    
    
    if(collider.gameObject.name == "HeadSphere") then 
        if waterRender ~= nil then waterRender.enabled = true end
        self.WaterAudioSource:PlayOneShot(self.WaterAudioClip);
    end


end



function WaterLogic:OnTriggerStay(collider)
    
    
    
    local rb = collider.gameObject:GetComponent("Rigidbody")

    if(collider.gameObject.name == "HeadSphere") then 
        print("Try to push head up")
        if(rb == nil) then print("Object".. collider.gameObject.name.."has no rigidbody") end
        if(rb ~= nil) then rb:AddForce(UE.Vector3.up * WaterPushPower);
        
    end
    prit("Tring to push player up")
   
   
 end

   
       
    
    
    
 



    
    




return Class(nil, nil, WaterLogic)